class Person {
  var name : String;
  var lName : String;
  var birthYear : Int;

  init(_ name : String, _ lName : String, _ birthYear : Int)
  {
    self.name = name;
    self.lName = lName;
    self.birthYear = birthYear
  }

  func getAge(_ currentYear : Int = 2023) -> Int
  {
    return currentYear - self.birthYear;
  }

  func toString() -> String
  {
    return """
      Imie: \(self.name)
      Nazwisko: \(self.lName)
      Rok urodzenia: \(self.birthYear)
    """
  }
}

enum Profile : String {
  case inf = "Informatyka"
  case mat = "Matematyka"
  case fiz = "Fizyka"
}

class Student : Person {
  var studyYear : Int;
  var profile : Profile;
  var indexNumber : Int;
  var sub1Grade: Double;
  var sub2Grade : Double;
  var sub3Grade : Double;
  var sub4Grade : Double;
  var sub5Grade : Double;


  init(
    _ name : String,
    _ lName : String,
    _ birthYear : Int,
    _ studyYear : Int,
    _ profile : Profile,
    _ indexNumber : Int,
    _ sub1Grade : Double,
    _ sub2Grade : Double,
    _ sub3Grade : Double,
    _ sub4Grade : Double,
    _ sub5Grade : Double,
  ) {
    guard (2...5).contains(sub1Grade) &&
        (2...5).contains(sub2Grade) &&
        (2...5).contains(sub3Grade) &&
        (2...5).contains(sub4Grade) &&
        (2...5).contains(sub5Grade) else {
        fatalError("Grades must be between 2 and 5 with a step of 0.5")
    }
    
    self.studyYear = studyYear
    self.profile = profile
    self.indexNumber = indexNumber
    self.sub1Grade = sub1Grade
    self.sub2Grade = sub2Grade
    self.sub3Grade = sub3Grade
    self.sub4Grade = sub4Grade
    self.sub5Grade = sub5Grade
    
    super.init(name, lName, birthYear)
  }

  func getAvg() -> Double {
    return (sub1Grade + sub2Grade + sub3Grade + sub4Grade + sub5Grade)/5.0
  }
  
  override func toString() -> String 
  {
    return """
      Imie: \(self.name)
      Nazwisko: \(self.lName)
      Rok urodzenia: \(self.birthYear)
      Rok studiow: \(self.studyYear)
      Profil: \(self.profile.rawValue)
      Numer albumu: \(self.indexNumber)
      Srednia ocen: \(self.getAvg())
    """
  }
}
INCOMPLETE !!!
